apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.16.0 (0c01309)
  creationTimestamp: null
  labels:
    io.kompose.service: nms
  name: nms
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: nms
    spec:
      containers:
      - args:
        - /bin/sh
        - -c
        - ln -sf ${TZ_FILE} /etc/localtime && until nc -z bqs 8086; do sleep 1; done
          && cd /app/fbcnms-projects/tgnms && yarn run start
        env:
        - name: BERINGEI_HOST
          valueFrom:
            configMapKeyRef:
              key: BERINGEI_HOST
              name: nms-env-nms-env
        - name: BQS
          valueFrom:
            configMapKeyRef:
              key: BQS
              name: nms-env-nms-env
        - name: MAPBOX_ACCESS_TOKEN
          valueFrom:
            configMapKeyRef:
              key: MAPBOX_ACCESS_TOKEN
              name: nms-env-nms-env
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              key: MYSQL_HOST
              name: nms-env-mysql-env
        - name: MYSQL_PASS
          valueFrom:
            configMapKeyRef:
              key: MYSQL_PASS
              name: nms-env-mysql-env
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              key: MYSQL_USER
              name: nms-env-mysql-env
        - name: NETWORK
          valueFrom:
            configMapKeyRef:
              key: NETWORK
              name: nms-env-nms-env
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: nms-env-nms-env
        - name: TZ_FILE
          valueFrom:
            configMapKeyRef:
              key: TZ_FILE
              name: nms-env-time-env
        image: facebookconnectivity-tg-docker.jfrog.io/tgnms:latest
        name: nms
        ports:
        - containerPort: 80
        resources: {}
        volumeMounts:
        - mountPath: /nodelogs
          name: nms-claim0
      restartPolicy: Always
      volumes:
      - name: nms-claim0
        persistentVolumeClaim:
          claimName: nms-claim0
status: {}
